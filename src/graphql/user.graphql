type User {
  id: ID!
  access_token: String,
  email: String!
  account: Account!
}

type Account {
  id: ID!
  children: [Child]
}

type AuthUserToken {
  accessToken: String!
  expiresIn: Int!
  idToken: String!
  refreshToken: String!
}

type RegistrationOutput {
  success: Boolean!
  error: String
}

type GetUserOutput {
  data: User
  error: String
}
#####################
# Input types
#####################

input AuthUserInput {
  email: String!
  password: String!
}

input ConfirmationCodeInput {
  code: String!
  email: String!
}

#####################
# END Input types
#####################

type Query {
  getUser: User
}


type Mutation {
  registerUser(input: AuthUserInput): RegistrationOutput
  verifyConfirmationCode(input: ConfirmationCodeInput): RegistrationOutput
  login(input: AuthUserInput): AuthUserToken
}
